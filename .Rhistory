idf <- read.csv("./data/IncomeRebuild.csv")
if (data_type == "Income") {
df <- filter(idf, code == "WA"| code == "DE" | code == "AL" ) %>%
select(x2000)
} else if (data_type == "Education") {
df <-filter(edf, code == "WA"| code == "DE"| code == "AL") %>%
select(x2000)
} else if (data_type == "Crime") {
df <- filter(cdf, Year == "2000", Code == "WA"| Code == "DE"| Code == "AL")%>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
}
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "bar")
if (data_type == "Income") {
df <- filter(idf, code == "WA"| code == "DE" | code == "AL" ) %>%
select(x2000)
} else if (data_type == "Education") {
df <-filter(edf, code == "WA"| code == "DE"| code == "AL") %>%
select(x2000)
} else if (data_type == "Crime") {
df <- filter(cdf, Year == "2000", Code == "WA"| Code == "DE"| Code == "AL")%>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
}
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "bar")
data_type <- "Income"
year <- 2000
yearChoiceX <- paste0("x", yearChoice)
if (data_type == "Income") {
df <- filter(idf, code == "WA"| code == "DE" | code == "AL" ) %>%
select(x2000)
} else if (data_type == "Education") {
df <-filter(edf, code == "WA"| code == "DE"| code == "AL") %>%
select(x2000)
} else if (data_type == "Crime") {
df <- filter(cdf, Year == "2000", Code == "WA"| Code == "DE"| Code == "AL")%>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
}
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "bar")
data_type <- "Income"
year <- 2000
yearChoiceX <- paste0("x", yearChoice)
if (data_type == "Income") {
df <- filter(idf, code == "WA"| code == "DE" | code == "AL" ) %>%
select(x2000)
} else if (data_type == "Education") {
df <-filter(edf, code == "WA"| code == "DE"| code == "AL") %>%
select(x2000)
} else if (data_type == "Crime") {
df <- filter(cdf, Year == "2000", Code == "WA"| Code == "DE"| Code == "AL")%>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
}
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "bar")
data_type <- "Income"
year <- 2000
yearChoiceX <- paste0("x", year)
if (data_type == "Income") {
df <- filter(idf, code == "WA"| code == "DE" | code == "AL" ) %>%
select(x2000)
} else if (data_type == "Education") {
df <-filter(edf, code == "WA"| code == "DE"| code == "AL") %>%
select(x2000)
} else if (data_type == "Crime") {
df <- filter(cdf, Year == "2000", Code == "WA"| Code == "DE"| Code == "AL")%>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
}
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "bar")
idf <- read.csv("./data/IncomeRebuild.csv")
setwd("C:/Users/Sean/info498/Final/Group-Project")
edf <- read.csv("./data/EducationData.csv")
cdf <- read.csv("./data/CrimeData.csv")
idf <- read.csv("./data/IncomeRebuild.csv")
data_type <- "Income"
year <- 2000
yearChoiceX <- paste0("x", year)
if (data_type == "Income") {
df <- filter(idf, code == "WA"| code == "DE" | code == "AL" ) %>%
select(x2000)
} else if (data_type == "Education") {
df <-filter(edf, code == "WA"| code == "DE"| code == "AL") %>%
select(x2000)
} else if (data_type == "Crime") {
df <- filter(cdf, Year == "2000", Code == "WA"| Code == "DE"| Code == "AL")%>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
}
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "bar")
df
require(dplyr)
require(plotly)
require(RColorBrewer)
BuildHistogram <- function(data_type, year, stateOne, stateTwo, stateThree){
edf <- read.csv("./data/EducationData.csv")
cdf <- read.csv("./data/CrimeData.csv")
idf <- read.csv("./data/IncomeRebuild.csv")
#For Changing to xDATE format
yearChoiceX <- paste0("x", year)
#Conditionals for the dataset read in.
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(year)
} else if (data_type == "Education") {
df <- filter(edf, code = stateOne| code == stateTwo | code == stateThree) %>%
select(year)
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree, year) %>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "histogram")
data_type <- "Income"
year <- "2010"
stateOne <- "WA"
stateTwo <- "OR"
stateThree <- "CA"
idf <- read.csv("./data/IncomeRebuild.csv")
yearChoiceX <- paste0("x", year)
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(year)
}
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(yearChoiceX)
}
View(idf)
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree )
View(df)
yearChoiceX
colnames(df)
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(yearChoiceX)
}
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select("x2010")
}
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(x2010)
}
View(df)
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(yearChoiceX)))
}
idf <- read.csv("./data/IncomeRebuild.csv")
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree )
View(df)
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)))
}
View(df)
data_type <- "Education"
edf <- read.csv("./data/EducationData.csv")
if (data_type == "Education") {
df <- filter(edf, code = stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)))
}
View(edf)
df <- filter(edf, code = stateOne| code == stateTwo | code == stateThree)
if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)))
}
View(df)
cdf <- read.csv("./data/CrimeData.csv")
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree, year) %>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree, year)
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree, year)
colnames(df) <- yearChoiceX
View(cdf)
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree)
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree, eval(parse(text=year)))
View(df)
filter(cdf, eval(parse(text=year)), Code == stateOne| Code == stateTwo| Code == stateThree)
df <- filter(cdf, eval(parse(text=year)), Code == stateOne| Code == stateTwo| Code == stateThree)
View(df)
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter_(year) %>%
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter_(year)
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter_(year)
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter_(eval(parse(year)))
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter_(eval(parse(text=year)))
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(eval(parse(text=year)))
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year)))
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select_(Violent.Crime.rate)
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate)
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)))
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)))
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
}
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)))
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)))
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "histogram")
plot_ly(df, x = eval(parse(text=yearChoiceX)), type = "histogram")
plot_ly(df, x = eval(parse(text=yearChoiceX)), type = "bar")
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "bar")
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)))
dataname <- "Median Income"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)))
dataname <- "Education Score"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate)
colnames(df) <- yearChoiceX
dataname <- "Violent Crime Rate"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "bar") %>%
layout(yaxis = list(title = paste(dataname)))
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = paste(stateOne, stateTwo, stateThree)))
layout(yaxis = list(title = paste(dataname)), xaxis = list(paste(stateOne, stateTwo, stateThree)))
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States"))
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- yearChoiceX
dataname <- "Violent Crime Rate"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), type = "bar") %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States"))
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- yearChoiceX
dataname <- "Violent Crime Rate"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), x = code | Code, type = "bar") %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States"))
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- c(yearChoiceX, "code")
dataname <- "Violent Crime Rate"
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- c(yearChoiceX, "code")
dataname <- "Violent Crime Rate"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), x = code, type = "bar") %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States"))
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
colorChoice <- "green"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
colorChoice <- "blue"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- c(yearChoiceX, "code")
dataname <- "Violent Crime Rate"
colorChoice <- "red"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), x = code, type = "bar", marker = list(color = toRGB(colorChoice))) %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States")) %>%
return()
}
data_type <- "Income"
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
colorChoice <- "green"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
colorChoice <- "blue"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- c(yearChoiceX, "code")
dataname <- "Violent Crime Rate"
colorChoice <- "red"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), x = code, type = "bar", marker = list(color = toRGB(colorChoice))) %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States")) %>%
return()
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
colorChoice <- "greens"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
colorChoice <- "blue"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- c(yearChoiceX, "code")
dataname <- "Violent Crime Rate"
colorChoice <- "red"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), x = code, type = "bar", marker = list(color = toRGB(colorChoice))) %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States")) %>%
return()
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
colorChoice <- "darkgreen"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
colorChoice <- "blue"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- c(yearChoiceX, "code")
dataname <- "Violent Crime Rate"
colorChoice <- "red"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), x = code, type = "bar", marker = list(color = toRGB(colorChoice))) %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States")) %>%
return()
data_type <- "Crime"
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
colorChoice <- "darkgreen"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
colorChoice <- "darkblue"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- c(yearChoiceX, "code")
dataname <- "Violent Crime Rate"
colorChoice <- "red"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), x = code, type = "bar", marker = list(color = toRGB(colorChoice))) %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States")) %>%
return()
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
colorChoice <- "darkgreen"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
colorChoice <- "darkblue"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- c(yearChoiceX, "code")
dataname <- "Violent Crime Rate"
colorChoice <- "darkred"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), x = code, type = "bar", marker = list(color = toRGB(colorChoice))) %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States")) %>%
return()
data_type <- "Education"
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
colorChoice <- "darkgreen"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
colorChoice <- "darkblue"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- c(yearChoiceX, "code")
dataname <- "Violent Crime Rate"
colorChoice <- "darkred"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), x = code, type = "bar", marker = list(color = toRGB(colorChoice))) %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States")) %>%
return()
BuildHistogram <- function(data_type, year, stateOne, stateTwo, stateThree){
edf <- read.csv("./data/EducationData.csv")
cdf <- read.csv("./data/CrimeData.csv")
idf <- read.csv("./data/IncomeRebuild.csv")
#For Changing to xDATE format
yearChoiceX <- paste0("x", year)
#Conditionals for the dataset read in.
if (data_type == "Income") {
df <- filter(idf, code == stateOne| code == stateTwo| code == stateThree ) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Median Income"
colorChoice <- "darkgreen"
} else if (data_type == "Education") {
df <- filter(edf, code == stateOne| code == stateTwo | code == stateThree) %>%
select(eval(parse(text=yearChoiceX)), code)
dataname <- "Education Score"
colorChoice <- "darkblue"
} else if (data_type == "Crime") {
df <- filter(cdf, Code == stateOne| Code == stateTwo| Code == stateThree) %>%
filter(Year == eval(parse(text=year))) %>%
select(Violent.Crime.rate, Code)
colnames(df) <- c(yearChoiceX, "code")
dataname <- "Violent Crime Rate"
colorChoice <- "darkred"
}
#Ploting Bar Chart
plot_ly(df, y = eval(parse(text=yearChoiceX)), x = code, type = "bar", marker = list(color = toRGB(colorChoice))) %>%
layout(yaxis = list(title = paste(dataname)), xaxis = list(title = "States")) %>%
return()
}
BuildHistogram("Income", "2012", "AL", "GA", "DE")
